@page "/DiemDelete/{MaSv}/{MaMonHoc}"
@using Assignment_True.Shared.Models
@using Assignment_True.Client.Services
@using Assignment_True.Client.Interfaces
@inject IDiemService _diemService
@inject ISinhVienService _sinhVienService
@inject NavigationManager Navigation

<h3>Xoá điẻm @_sinhVien.TenSv</h3>

<EditForm Model="_diem" OnValidSubmit="submitTask">
    <h4>Phần tử này sẽ bị xoá đi:</h4>
    <div class="mb-3">
        <label class="form-label" for="">Điểm document: @_diem.DiemDocument</label>

    </div>
    <div class="mb-3">
        <label class="form-label" for="">Điểm presentation: @_diem.DiemPresentation</label>
    </div>

    <button type="submit" class="btn btn-danger">Đồng ý</button>
    <a href="/DiemIndex/" class="btn btn-primary">Từ chối</a>
</EditForm>

@code {
    [Parameter] 
    public string MaSv { get; set; }
    public string MaMonHoc { get; set; }
    Diem _diem = new Diem();
    SinhVien _sinhVien = new SinhVien();
    protected override async Task OnInitializedAsync()
    {
        var info = await _diemService.GetById(MaSv,MaMonHoc);
        _sinhVien = await _sinhVienService.GetById(MaSv);
        _diem.DiemDocument = info.DiemDocument;
        _diem.DiemPresentation = info.DiemPresentation;
    }
    private async Task submitTask(EditContext context)
    {
        var result = await _diemService.Delete(MaSv,MaMonHoc);
        if (result)
        {
            Navigation.NavigateTo($"/DiemIndex/{MaSv}");
        }

    }
}
